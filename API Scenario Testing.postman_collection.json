{
	"info": {
		"_postman_id": "08d54b01-600c-468d-89b9-d4dba116f439",
		"name": "API Scenario Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40700464"
	},
	"item": [
		{
			"name": "Scenario 1: Create User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"User is created successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.jsonBody('email').that.equals('thutranmon2005@gmail.com');\r",
							"    pm.response.to.have.jsonBody('username').that.equals('thu');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the syntax for asserting JSON body properties\r",
							"pm.test(\"User is created successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.expect(pm.response.json().email).to.equal('thutranmon2005@gmail.com');\r",
							"    pm.expect(pm.response.json().username).to.equal('thu');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"thu\",\r\n    \"password\": \"thutran\",\r\n    \"email\":\"thutranmon2005@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/netflix/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"netflix",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 2: Create User - Invalid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid email format returns bad request\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"    pm.response.to.have.jsonBody('error').that.equals('Invalid email format');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"thu\",\r\n    \"password\": \"thutran\",\r\n    \"email\":\"invalid-email\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/netflix/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"netflix",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 3: Get User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User details are retrieved successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.jsonBody('userId').that.equals(1);\r",
							"    pm.response.to.have.jsonBody('email').that.equals('thutran@example.com');\r",
							"    pm.response.to.have.jsonBody('username').that.equals('thu');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/netflix/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"netflix",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 4: Update User Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User information updated successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.jsonBody('email').that.equals('thutran@gmail.com');\r",
							"    pm.response.to.have.jsonBody('username').that.equals('Thu Tran');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"email\": \"thutran@gmail.com\",\r\n    \"username\": \"Thu Tran\",\r\n    \"accountLockUntil\": null,\r\n    \"failedLoginAttempt\": 0,\r\n    \"activated\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/netflix/user/1/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"netflix",
						"user",
						"1",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 5: User Not Found",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Scenario 6: Delete User",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}